apiVersion: apps/v1
kind: Deployment
metadata:
  name: fc-deployment
  labels:
    app: fc-deployment
  namespace: hz-test
spec:
  selector:
    matchLabels:
      app: fc-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: fc-pod
    spec:
      nodeSelector:
        gpu: A10
      containers:
      - name: fc-crm
        image: 10.3.5.23:5000/k8s:java
        ports:
        - containerPort: 18501
        command: ["/data/start.sh"]   # 多行命令推荐写成一个shell执行文件，默认执行的可以不设置
        args: [] # 可以不用
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 18501
          periodSeconds: 30
          # initialDelaySeconds: 60
        # 如果配置了startupProbe，个人感觉可以忽略
        readinessProbe:
          httpGet: 
            path: /actuator/health
            port: 18501
          periodSeconds: 30
          # initialDelaySeconds: 60
        # 启动检测【在启动慢的应用中比较适合使用】，下面例子 30 * 10 = 300s
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 18501
          failureThreshold: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 8
            memory: 2Gi
          limits:
            cpu: 16
            memory: 4Gi
      - name: fc-py
        image: 10.3.5.23:5000/k8s:py
        ports:
        - containerPort: 13000
        - containerPort: 18350
        - containerPort: 18400
        - containerPort: 18450
        - containerPort: 18600
        command: ["/root/start.sh"]
        livenessProbe:
          httpGet:
            path: /check
            port: 18350
          periodSeconds: 60
        readinessProbe:
          httpGet: 
            path: /check
            port: 18350
          periodSeconds: 60
        startupProbe:
          httpGet:
            path: /check
            port: 18350
          failureThreshold: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 16
            memory: 32Gi
          limits:
            cpu: 32
            memory: 64Gi
---
apiVersion: v1
kind: Service
metadata:
  name: fc-service
  namespace: hz-test
spec:
  selector:
    app: fc-pod    # 这里要注意一下，需要设置pod的标签
  ports:
  - port: 18501
    targetPort: 18501
    nodePort: 30300
  type: NodePort